name: Minify and Deploy HTML/CSS/JS

permissions:
  contents: write

on:
  push:
    branches:
      - source

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source branch
        uses: actions/checkout@v4
        with:
          ref: source

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install minification tools
        run: npm install -g html-minifier clean-css-cli terser

      - name: Minify HTML files (preserve folder structure)
        run: |
          rm -rf minified
          # For every .html (excluding anything already under minified/),
          # create its parent folder in minified/ and write the minified output there:
          find . -type f -name '*.html' -not -path './minified/*' \
            -exec sh -c '
              for filepath; do
                # remove leading "./" if present
                rel="${filepath#./}"
                # ensure target directory exists
                mkdir -p "minified/$(dirname "$rel")"
                # run html-minifier into the mirrored path under minified/
                html-minifier --collapse-whitespace --remove-comments \
                  --minify-css true --minify-js true \
                  -o "minified/$rel" "$rel"
              done
            ' _ {} +

      - name: Minify CSS files (preserve folder structure)
        run: |
          if [ -d css ]; then
            find css -type f -name '*.css' -not -path './minified/css/*' \
              -exec sh -c '
                for cssfile; do
                  rel="${cssfile#./}"
                  mkdir -p "minified/$(dirname "$rel")"
                  clean-css -o "minified/$rel" "$rel"
                done
              ' _ {} +
          fi

      - name: Minify JS files (preserve folder structure)
        run: |
          if [ -d js ]; then
            find js -type f -name '*.js' -not -path './minified/js/*' \
              -exec sh -c '
                for jsfile; do
                  rel="${jsfile#./}"
                  mkdir -p "minified/$(dirname "$rel")"
                  terser "$rel" --compress --mangle --output "minified/$rel"
                done
              ' _ {} +
          fi

      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          path: main_branch

      - name: Copy minified files and other assets to main branch
        run: |
          # Remove old files if needed (optional cleanup)
          # rm -rf main_branch/*

          # Copy everything in minified/ (which mirrors your folder tree)
          rsync -av --delete minified/ main_branch/

          # If you have other static directories to copy (images, data, etc.), do so:
          # e.g. only if they exist on source; skip if missing
          if [ -d 3dgs/images ]; then
            mkdir -p main_branch/3dgs/images
            rsync -av --delete 3dgs/images/ main_branch/3dgs/images/
          fi
          if [ -d 3dgs/images/thumbs ]; then
            mkdir -p main_branch/3dgs/images/thumbs
            rsync -av --delete 3dgs/images/thumbs/ main_branch/3dgs/images/thumbs/
          fi
          if [ -d data ]; then
            mkdir -p main_branch/data
            rsync -av --delete data/ main_branch/data/
          fi

          cd main_branch
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Minified HTML/CSS/JS and copied assets from source" || echo "No changes to commit"
          git push origin main